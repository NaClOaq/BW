[
// undo
    { "keys": ["ctrl+shift+_"], "command": "undo"},
    { "keys": ["ctrl+shift+/"], "command": "redo"},
    { "keys": ["alt+["], "command": "soft_undo" },
    { "keys": ["alt+]"], "command": "soft_redo" },

// 置換
    { "keys": ["alt+shift+5"], "command": "show_panel", "args": {"panel": "replace"} },

// 新規バッファ
    { "keys": ["ctrl+x","n"], "command": "new_file" },

// 複数選択
    { "keys": ["ctrl+shift+l"], "command": "split_selection_into_lines" },
    { "keys": ["ctrl+shift+d"], "command": "find_under_expand" },
    { "keys": ["ctrl+shift+k", "ctrl+shift+d"], "command": "find_under_expand_skip" },

// タブ挿入   
    { "keys": ["ctrl+q","tab"], "command": "insert", "args": {"characters": "\t"} },

// anythigパネル
    { "keys": ["alt+p"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },


// 改行関係
    { "keys": ["ctrl+j"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line.sublime-macro"} },
    // { "keys": ["ctrl+shift+j"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line Before.sublime-macro"} },
    { "keys": ["ctrl+shift+j"], "command": "join_lines" },
    { "keys": ["ctrl+shift+o"], "command": "join_lines" },

// 折りたたみ
    { "keys": ["ctrl+shift+["], "command": "fold" },
    { "keys": ["ctrl+shift+]"], "command": "unfold" },

//SideBarEnhancements
    { "keys": ["ctrl+x", "ctrl+n"], "command": "side_bar_new_file2" },
    { "keys": ["f2"], "command": "side_bar_rename" },
    { "keys": ["ctrl+alt+f"], "command": "side_bar_find_files_path_containing" },
//ExpandRegion
    { "keys": ["ctrl+shift+space"], "command": "expand_region" },
//insert wiro_tag
    // {"keys": ["alt+1"], "command": "run_macro_file", "args": {"file": "Packages/User/wiro/wiro_nomb.sublime-macro"}},
    // {"keys": ["alt+2"], "command": "run_macro_file", "args": {"file": "Packages/User/wiro/wiro_pc.sublime-macro"}},
    // {"keys": ["alt+3"], "command": "run_macro_file", "args": {"file": "Packages/User/wiro/wiro_sp.sublime-macro"}},
    // {"keys": ["alt+4"], "command": "run_macro_file", "args": {"file": "Packages/User/wiro/wiro_mb.sublime-macro"}},
// Emmet
    // 展開
    { "keys": [ "ctrl+enter" ],  "args": { "action": "expand_abbreviation" },"command": "run_emmet_action",  "context": [ { "key":"emmet_action_enabled.expand_abbreviation" } ] },
    // 親要素へ
    { "keys": [ "ctrl+alt+j" ],  "args": { "action": "matching_pair" },"command": "run_emmet_action",  "context": [ { "key":"emmet_action_enabled.matching_pair" } ] },
    // タブキー
    {
        "keys": [
            "tab"
        ],
        "command": "expand_abbreviation_by_tab",
        "context": [
            {
                "operand": "source.css, source.sass, source.less, source.scss, source.stylus, source.jade, text.slim, text.xml, text.html - source, text.haml, text.scala.html, source string",
                "operator": "equal",
                "match_all": true,
                "key": "selector"
            },
            {
                "operand": "storage.type.templatetag.django",
                "operator": "not_equal",
                "match_all": true,
                "key": "selector"
            },
            {
                "match_all": true,
                "key": "selection_empty"
            },
            {
                "operator": "equal",
                "operand": false,
                "match_all": true,
                "key": "has_next_field"
            },
            {
                "operator": "equal",
                "operand": false,
                "match_all": true,
                "key": "setting.disable_tab_abbreviations"
            },
            {
                "operand": false,
                "operator": "equal",
                "match_all": true,
                "key": "auto_complete_visible"
            },
            {
                "match_all": true,
                "key": "is_abbreviation"
            }
        ]
    },

    {
        "keys": [
            "tab"
        ],
        "command": "expand_abbreviation_by_tab",
        "context": [
            {
                "operand": "source.css, source.sass, source.less, source.scss, source.stylus, source.jade, text.slim, text.xml, text.html - source, text.haml, text.scala.html, source string",
                "operator": "equal",
                "match_all": true,
                "key": "selector"
            },
            {
                "operand": "storage.type.templatetag.django",
                "operator": "not_equal",
                "match_all": true,
                "key": "selector"
            },
            {
                "match_all": true,
                "key": "selection_empty"
            },
            {
                "operator": "equal",
                "operand": false,
                "match_all": true,
                "key": "has_next_field"
            },
            {
                "operator": "equal",
                "operand": true,
                "match_all": true,
                "key": "auto_complete_visible"
            },
            {
                "operator": "equal",
                "operand": false,
                "match_all": true,
                "key": "setting.disable_tab_abbreviations_on_auto_complete"
            },
            {
                "match_all": true,
                "key": "is_abbreviation"
            }
        ]
    },


//    {"keys": ["super+shift+c"], "command": "shell_prompt"},
    {"keys": ["option+shift+1"], "command": "shell_prompt"},
    {"keys": ["option+ctrl+shift+1"], "command": "subprocess_in_cwd", "args": {
// This AppleScript requires the access for assistive
// devices to be turned on in the Universal Access system
// preferences. Using Cmd-T keystroke instead (which
// doesn't require the above setting) does not work if keys
// are still held down from the Sublime Text keybinding.
    "cmd": "osascript -e 'tell application \"Terminal\"' -e 'activate' -e 'tell application \"System Events\" to click menu item \"Basic\" of ((process \"Terminal\")'\\''s (menu bar 1)'\\''s (menu bar item \"Shell\")'\\''s (menu \"Shell\")'\\''s (menu item \"New Tab\")'\\''s (menu \"New Tab\"))' -e \"do script with command \\\"cd '$PWD' && clear\\\" in window 1\" -e 'end tell'",
// Wait for AppleScript to return a successful exit code. This allows
// for showing any error message the script may cause. For instance, if
// the user doesn't have their "Access for assistive devices" setting
// enabled.
    "wait": true
    }
    }
]
